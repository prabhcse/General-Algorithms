#include <iostream>
#include <vector>
#include <random>
#include <chrono>

using namespace std;

// For printing output
void show(vector<int> & array)
{
	for(int i = 0; i < array.size(); i++)
	{
		cout<<array[i]<<",";
	}
}

int main()
{
	vector<int> arr1;
	vector<int> arr2;
	vector<int> arr3;
	
  	std::uniform_int_distribution<int> dist(0,5);
  	
	for(int n = 10; n <= 20; n+=5)
	{
		int range = 5;
		
		unsigned seed = chrono::system_clock::now().time_since_epoch().count();
  		// Creates different seed for each array
  		default_random_engine gen (seed*n);
		for(int i = 1; i <= n; i++)
		{
			if(n == 10)
			{
				arr1.push_back( dist(gen) + range);
			}
			else if(n == 15)
			{
				arr2.push_back( dist(gen) + range);
			}
			else if(n == 20)
			{
				arr3.push_back( dist(gen) + range);
			}
			
			range+=5;
		}
	}
	
	// Test:(considered as highest value)
	// Remove it, when implementing this function
	arr1.push_back(1988);
	arr2.push_back(1988);
	arr3.push_back(1988);
	
	cout<<"\n Array 1: ";
	show(arr1);
	cout<<"\n Array 2: ";
	show(arr2);
	cout<<"\n Array 3: ";
	show(arr3);
	
	int index1 = 0;
	int index2 = 0;
	int index3 = 0;
	bool found = false;
	while(index1 < arr1.size() || index2 < arr2.size() || index3 < arr3.size())
	{
		if( (arr1[index1] == arr2[index2]) && (arr2[index2] == arr3[index3]) )
		{
			cout<<"\n Common :"<<arr1[index1]<<", Indices:"<<index1<<","<<index2<<","<<index3;
			found = true;
		}
		
		if(arr1[index1] < arr2[index2])
		{
			if(arr1[index1] < arr3[index3])
			{
				index1++;
				// Out of bound check
				if(index1 == arr1.size())
				{
					if(found)
					{
						cout<<"\n No more common elements";
					}
					break;
				}
			}
			else
			{
				index3++;
				// Out of bound check
				if(index3 == arr3.size())
				{
					if(found)
					{
						cout<<"\n No more common elements";
					}
					break;
				}
			}
		}
		else
		{
			if(arr2[index2] < arr3[index3])
			{
				index2++;
				// Out of bound check
				if(index2 == arr2.size())
				{
					if(found)
					{
						cout<<"\n No more common elements";
					}
					break;
				}
			}
			else
			{
				index3++;
				// Out of bound check
				if(index3 == arr3.size())
				{
					if(found)
					{
						cout<<"\n No more common elements";
					}
					break;
				}
			}
		}
	}
	
	if(!found)
	{
		cout<<"\n No common element found";
	}
	
}
